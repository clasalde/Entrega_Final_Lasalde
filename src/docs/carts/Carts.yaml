## TODO add ticket model, add products to Cart Schema
paths:
  /api/cart:
    post:
      summary: Create Cart
      tags:
        - Carts
      responses:
        "200":
          description: Empty Cart created. Returns MongoId
  /api/cart/{cid}:
    get:
      summary: Get cart from Db
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart id to search for
          schema:
            type: string
      responses:
        "200":
          description: "Get a Cart by Id with the full products fetched from DB"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "500":
          description: Server error
    put:
      summary: Add several products to cart
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart id to add products to
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schemas/AddProductsToCart"
      responses:
        "200":
          description: "Added products to cart"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "500":
          description: Server error

    delete:
      summary: Delete all products from cart
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart id to delete all products from
          schema:
            type: string
      responses:
        "200":
          description: "Deleted all products to cart"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "500":
          description: Server error

  /api/cart/{cid}/product/{pid}:
    put:
      summary: Add a product to cart
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart id to add products to
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: Product id
          schema:
            type: string
      responses:
        "200":
          description: "Added product to cart"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "500":
          description: Server error

    delete:
      summary: Delete a product from cart
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart id to add products to
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: Product id
          schema:
            type: string
      responses:
        "200":
          description: "Deleted product from cart"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
        "500":
          description: Server error
  /api/cart/{cid}/purchase:
    get:
      summary: Finish purchase
      tags:
        - Carts
      parameters:
        - name: uid
          in: path
          required: true
          description: Cart id to finish purchase with
          schema:
            type: string
      responses:
        "200":
          description: "Purchase finished"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Ticket"
        "500":
          description: Server error

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: MongoDb id
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: object
                properties:
                  _id:
                    type: ObjectId
                    description: MongoDB id
                  title:
                    type: string
                    description: The title of the product
                  description:
                    type: string
                    description: The description of the product
                  price:
                    type: number
                    description: The price of the product
                    example:
                  img:
                    type: string
                    description: The image URL of the product
                  code:
                    type: string
                    description: The unique code of the product
                  stock:
                    type: number
                    description: The stock quantity of the product
                    example:
                  category:
                    type: string
                    description: The category of the product
                  status:
                    type: boolean
                    description: The availability status of the product
                  thumbnails:
                    type: array
                    items:
                      type: string
                    description: Array of thumbnail image URLs
                  owner:
                    type: string
                    description: The owner of the product
                description: List of products
              quantity:
                type: number
                description: The quantity of the product in the cart
          description: An array of products in the cart
      example:
        _id: ObjectId('123124124')
        products:
          [
            {
              product:
                {
                  _id: ObjectId('123454'),
                  title: Product A,
                  description: This is a sample product,
                  price: 29.99,
                  img: http://example.com/image.jpg,
                  code: PROD001,
                  stock: 100,
                  category: Electronics,
                  status: true,
                  thumbnails: [http://example.com/thumb1.jpg],
                  owner: user123,
                },
              quantity: 1,
            },
          ]
    Ticket:
      type: object
      properties:
        _id:
          type: ObjectId
          description: MongoDb id
        code:
          type: string
          description: Unique ticket code
        purchase_datetime:
          type: date
          description: purchase ts
        amount:
          type: number
          description: Total cost of purchase
        purchaser:
          type: string
          description: Purchaser email
        purchaserId:
          type: ObjectId
          description: Ourchaser mongoId
      example:
        _id: ObjectId('12345')
        code: asd32434
        purchase_datetime: sample date
        amount: 10000
        purchaser: asd@asd.com
        purchaserId: ObjectId('6546456456')
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: MongoDB id
        title:
          type: string
          description: The title of the product
        description:
          type: string
          description: The description of the product
        price:
          type: number
          description: The price of the product
          example:
        img:
          type: string
          description: The image URL of the product
        code:
          type: string
          description: The unique code of the product
        stock:
          type: number
          description: The stock quantity of the product
          example:
        category:
          type: string
          description: The category of the product
        status:
          type: boolean
          description: The availability status of the product
        thumbnails:
          type: array
          items:
            type: string
          description: Array of thumbnail image URLs
        owner:
          type: string
          description: The owner of the product
      example:
        _id: ObjectId('123454')
        title: Product A
        description: This is a sample product
        price: 29.99
        img: http://example.com/image.jpg
        code: PROD001
        stock: 100
        category: Electronics
        status: true
        thumbnails: [http://example.com/thumb1.jpg]
        owner: user123
    AddProductsToCart:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            description: MongoDb id
          title:
            type: string
            description: The title of the product
          description:
            type: string
            description: The description of the product
          price:
            type: number
            description: The price of the product
          img:
            type: string
            description: The image URL of the product
          code:
            type: string
            description: The unique code of the product
          stock:
            type: number
            description: The stock quantity of the product
          category:
            type: string
            description: The category of the product
          status:
            type: boolean
            description: The availability status of the product
          thumbnails:
            type: array
            items:
              type: string
            description: Array of thumbnail image URLs
          owner:
            type: string
            description: The owner of the product
          quantity:
            type: number
            description: Quantity of product
        required:
          - _id
          - quantity
        example:
          _id: "1234546"
          title: "Product A"
          description: "This is a sample product"
          price: 29.99
          img: "http://example.com/image.jpg"
          code: "PROD001"
          stock: 100
          category: "Electronics"
          status: true
          thumbnails: ["http://example.com/thumb1.jpg"]
          owner: "user123"
          quantity: 1
          
